add_subdirectory(misc_utils)

MACRO(ADD_SWIG_JAVA_WRAPPER PKG_NAME ${ARGN})
  include_directories(. ${JNI_INCLUDE_DIRS}) 
  set(CMAKE_SWIG_FLAGS -package ${PKG_NAME})
  set(CMAKE_SWIG_OUTDIR "${CMAKE_SWIG_OUTDIR}/${PKG_NAME}")
  file(MAKE_DIRECTORY ${CMAKE_SWIG_OUTDIR})
  set_source_files_properties(example.i PROPERTIES CPLUSPLUS ON)
  add_library(${PKG_NAME}_cpp_lib STATIC ${ARGN})
  swig_add_module("${PKG_NAME}_java" java example.i) 
  swig_link_libraries("${PKG_NAME}_java" ${JNI_LIBRARIES} ${${PKG_NAME}_java} ${PKG_NAME}_cpp_lib)           
  install(TARGETS ${PKG_NAME}_java DESTINATION ${CMAKE_SOURCE_DIR}/../cpp_lib)
  add_custom_target(${PKG_NAME}_runme ALL
    echo "package ${PKG_NAME}\;" | cat - ${CMAKE_CURRENT_SOURCE_DIR}/runme.java > ${CMAKE_SWIG_OUTDIR}/runme.java)
ENDMACRO(ADD_SWIG_JAVA_WRAPPER)

add_subdirectory(callback)
add_subdirectory(jenum)
add_subdirectory(jclass)
add_subdirectory(reference)
add_subdirectory(extend)
add_subdirectory(jtemplate)
add_subdirectory(constants)
set(CPP_SOURCES ${CPP_SOURCES} PARENT_SCOPE)
set(CPP_INCLUDE_DIRS ${CPP_INCLUDE_DIRS} PARENT_SCOPE)
set(SWIG_INTERFACE_FILES ${SWIG_INTERFACE_FILES} PARENT_SCOPE)
